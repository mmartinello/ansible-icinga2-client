---
- name: Ensure custom conf.d directory is present
  file:
    path: "{{ icinga2_config_root_dir }}/{{ icinga2_custom_confd_dir }}"
    state: directory
  notify: Reload Icinga2

- name: Ensure config files are recursively included from conf.d dir
  lineinfile:
    path: "{{ icinga2_config_root_dir }}/{{ icinga2_main_config_file }}"
    line: "include_recursive \"{{ icinga2_custom_confd_dir }}\""
    state: present
  notify: Reload Icinga2

- name: Ensure services.d directory is present
  file:
    path: "{{ icinga2_config_root_dir }}/{{ icinga2_services_dir }}"
    state: directory
  notify: Reload Icinga2
  
- name: Ensure config files are recursively included from services dir
  lineinfile:
    path: "{{ icinga2_config_root_dir }}/{{ icinga2_main_config_file }}"
    line: "include_recursive \"{{ icinga2_services_dir }}\""
    state: present
  notify: Reload Icinga2

- name: Remove default unnecessary config files
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ icinga2_default_unnecessary_config_files }}"
  notify: Reload Icinga2

- name: Get Virtual Machine type
  command: /usr/sbin/virt-what
  register: virt_what

- set_fact:
    icinga2_vm_type: "{{ virt_what.stdout }}"
  when: virt_what.stdout != ""

- set_fact:
    icinga2_client_configured: true
  when: icinga2_client_file.stat.exists == True and icinga2_client_reinstall == False
  
- name: Setup Icinga constants
  lineinfile:
    path: "{{ icinga2_config_root_dir }}/constants.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^(\/\/)?\s*const NodeName', line: 'const NodeName = "{{ inventory_hostname }}"' }
    - { regexp: '^(\/\/)?\s*const ZoneName', line: 'const ZoneName = "{{ inventory_hostname }}"' }

- name: Setup Icinga zones
  template:
    src: ../templates/client-zones.conf.j2
    dest: "{{ icinga2_config_root_dir }}/zones.conf"
    owner: root
    group: root
    mode: 0644
    
- name: Copy CA and certs to client node
  copy:
    src: "{{ item }}"
    dest: /var/lib/icinga2/certs/
    owner: "{{ icinga2_user }}"
    group: "{{ icinga2_group }}"
    mode: 0600
    directory_mode: 0700
  with_fileglob:
    - "/tmp/ansible/{{ inventory_hostname }}/icinga/*"
  when: icinga2_client_configured == False
      
- name: Configure Icinga API on satellite
  template:
    src: client-api.conf.j2
    dest: "{{ icinga2_config_root_dir }}/features-available/api.conf"
    owner: root
    group: root
    mode: 0644

- name: Enable Icinga API on satellite
  file:
    src: "{{ icinga2_config_root_dir }}/features-available/api.conf"
    dest: "{{ icinga2_config_root_dir }}/features-enabled/api.conf"
    state: link

- name: Disable Icinga notifier on satellite
  file:
    path: "{{ icinga2_config_root_dir }}/features-enabled/notification.conf"
    state: absent

- name: Configure Icinga checker on satellite
  template:
    src: client-checker.conf.j2
    dest: "{{ icinga2_config_root_dir }}/features-available/checker.conf"
    owner: root
    group: root
    mode: 0644

- name: Create the client configuration state file
  file:
    path: /root/.icinga2_client_configured
    state: touch
  when: icinga2_client_configured == False
